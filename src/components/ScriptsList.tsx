import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Button } from './ui/button';
import { Badge } from './ui/badge';
import { Input } from './ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from './ui/dialog';
import { 
  Download, 
  Star, 
  Eye, 
  Search, 
  Filter,
  Tag,
  User,
  Calendar,
  Code,
  FileText,
  Crown,
  Zap
} from 'lucide-react';
import { useLanguage } from '../hooks/useLanguage';
import StarRating from './StarRating';
import RatingModal from './RatingModal';
import { useToast } from '../hooks/use-toast';

interface Script {
  id: string;
  title: string;
  description: string;
  code: string;
  category: string;
  tags: string[];
  author_name: string;
  version: string;
  status: 'draft' | 'published' | 'archived' | 'banned';
  is_featured: boolean;
  is_premium: boolean;
  downloads_count: number;
  rating: number;
  rating_count: number;
  file_size: number;
  file_type: string;
  created_at: string;
  updated_at: string;
  published_at?: string;
}

const ScriptsList: React.FC = () => {
  const { t } = useLanguage();
  const { toast } = useToast();
  const [scripts, setScripts] = useState<Script[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedScript, setSelectedScript] = useState<Script | null>(null);
  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);
  const [isRatingModalOpen, setIsRatingModalOpen] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const [categoryFilter, setCategoryFilter] = useState('');
  const [sortBy, setSortBy] = useState('created_at');
  const [sortOrder, setSortOrder] = useState('desc');

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
  const loadScripts = async () => {
    try {
      setLoading(true);
      const params = new URLSearchParams({
        page: '1',
        limit: '50',
        status: 'published',
        sort: sortBy,
        order: sortOrder
      });

      if (searchTerm) params.append('search', searchTerm);
      if (categoryFilter) params.append('category', categoryFilter);

      const token = localStorage.getItem('jwt_token');
      const headers: Record<string, string> = {};
      
      if (token) {
        headers['Authorization'] = `Bearer ${token}`;
      }

      const response = await fetch(`http://localhost:3001/api/scripts/public?${params}`, {
        headers
      });
      const data = await response.json();
      
      if (data.success) {
        setScripts(data.data.scripts || []);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    loadScripts();
  }, [searchTerm, categoryFilter, sortBy, sortOrder]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è Ebuster
  const checkExtensionInstalled = (): Promise<boolean> => {
    return new Promise((resolve) => {
      console.log('üîç [checkExtensionInstalled] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...');
      
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Bridge —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
      const checkBridge = (attempts = 0) => {
        console.log(`üîç [checkExtensionInstalled] –ü–æ–ø—ã—Ç–∫–∞ ${attempts + 1}/10`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ content script
        console.log('üîç [checkExtensionInstalled] window.ebusterContentScriptLoaded =', (window as any).ebusterContentScriptLoaded);
        if ((window as any).ebusterContentScriptLoaded) {
          console.log('‚úÖ [checkExtensionInstalled] Content script –∑–∞–≥—Ä—É–∂–µ–Ω');
        } else {
          console.log('‚ùå [checkExtensionInstalled] Content script –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Ebuster Bridge
        console.log('üîç [checkExtensionInstalled] window.EbusterBridge =', (window as any).EbusterBridge);
        console.log('üîç [checkExtensionInstalled] typeof window.EbusterBridge =', typeof (window as any).EbusterBridge);
        
        if (typeof (window as any).EbusterBridge !== 'undefined') {
          console.log('‚úÖ [checkExtensionInstalled] Ebuster Bridge –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ...');
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º Ebuster Bridge –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
          (window as any).EbusterBridge.sendMessage({ action: 'ping' }, (response: any, error: any) => {
            if (error) {
              console.log('‚ùå [checkExtensionInstalled] –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error);
              resolve(false);
            } else {
              console.log('‚úÖ [checkExtensionInstalled] –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ Bridge');
              (window as any).ebusterExtensionId = 'bridge'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º bridge –¥–ª—è —Å–≤—è–∑–∏
              resolve(true);
            }
          });
        } else {
          console.log('‚ùå [checkExtensionInstalled] Ebuster Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω');
          
          // –ï—Å–ª–∏ Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 100–º—Å
          if (attempts < 9) {
            console.log('üîÑ [checkExtensionInstalled] –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 100–º—Å...');
            setTimeout(() => checkBridge(attempts + 1), 100);
          } else {
            console.log('‚ùå [checkExtensionInstalled] –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫');
            resolve(false);
          }
        }
      };
      
      // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      checkBridge();
    });
  };

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
  const installScriptInExtension = async (scriptData: any): Promise<boolean> => {
    return new Promise((resolve) => {
      console.log('üîß [installScriptInExtension] –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–∫—Ä–∏–ø—Ç–∞:', scriptData.title);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Ebuster Bridge –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
      const scriptInstallData = {
        action: 'installScript',
        name: scriptData.title,
        code: scriptData.code,
        url: window.location.href,
        timestamp: Date.now()
      };
      
      if (typeof (window as any).EbusterBridge !== 'undefined') {
        console.log('üîç [installScriptInExtension] –ò—Å–ø–æ–ª—å–∑—É–µ–º Ebuster Bridge –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞');
        
        (window as any).EbusterBridge.sendMessage(scriptInstallData, (response: any, error: any) => {
          if (error) {
            console.log('‚ùå [installScriptInExtension] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Bridge:', error);
            // Fallback –Ω–∞ localStorage
            localStorage.setItem('ebuster_script_install', JSON.stringify(scriptInstallData));
            console.log('üì¶ [installScriptInExtension] –ò—Å–ø–æ–ª—å–∑—É–µ–º localStorage –∫–∞–∫ fallback');
            
            toast({
              title: t('header.dashboard.scripts.installInstructions') || '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ',
              description: t('header.dashboard.scripts.installInstructionsDesc') || '–û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞',
              variant: 'info'
            });
          } else {
            console.log('‚úÖ [installScriptInExtension] –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Bridge');
            
            toast({
              title: t('header.dashboard.scripts.installSuccess') || '–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!',
              description: t('header.dashboard.scripts.installSuccessDesc') || '–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster',
              variant: 'success'
            });
          }
          resolve(true);
        });
      } else {
        console.log('‚ùå [installScriptInExtension] Ebuster Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage');
        localStorage.setItem('ebuster_script_install', JSON.stringify(scriptInstallData));
        
        toast({
          title: t('header.dashboard.scripts.installInstructions') || '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ',
          description: t('header.dashboard.scripts.installInstructionsDesc') || '–û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞',
          variant: 'info'
        });
        
        resolve(true);
      }
    });
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞/—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
  const handleDownloadScript = async (scriptId: string) => {
    try {
      const token = localStorage.getItem('jwt_token');
      const headers: Record<string, string> = {
        'Content-Type': 'application/json',
      };
      
      if (token) {
        headers['Authorization'] = `Bearer ${token}`;
      }

      const response = await fetch(`http://localhost:3001/api/scripts/public/${scriptId}/download`, {
        method: 'POST',
        headers,
        body: JSON.stringify({}) // –£–±–∏—Ä–∞–µ–º user_id, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∏–∑ —Ç–æ–∫–µ–Ω–∞
      });

      const data = await response.json();
      
      if (data.success) {
        console.log('‚úÖ [handleDownloadScript] –°–∫—Ä–∏–ø—Ç –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ...');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        const extensionInstalled = await checkExtensionInstalled();
        console.log('üîç [handleDownloadScript] –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', extensionInstalled);
        
        if (extensionInstalled) {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
          const installSuccess = await installScriptInExtension(data.data);
          
          if (installSuccess) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
            console.log('‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ');
            toast({
              title: t('header.dashboard.scripts.installSuccess') || '–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!',
              description: t('header.dashboard.scripts.installSuccessDesc') || '–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster',
              variant: 'success'
            });
          } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ');
            toast({
              title: t('header.dashboard.scripts.installError') || '–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏',
              description: t('header.dashboard.scripts.installErrorDesc') || '–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ. –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª.',
              variant: 'destructive'
            });
            // Fallback: —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            downloadScriptFile(data.data);
          }
        } else {
          // –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
          console.log('üì• –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª');
          toast({
            title: t('header.dashboard.scripts.extensionNotFound') || '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
            description: t('header.dashboard.scripts.extensionNotFoundDesc') || '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤',
            variant: 'warning'
          });
          downloadScriptFile(data.data);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
    }
  };

  // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–ø—Ç–∞ (fallback)
  const downloadScriptFile = (scriptData: any) => {
    const blob = new Blob([scriptData.code], { type: 'text/javascript' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${scriptData.title}.js`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  // –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  const testExtensionConnection = async () => {
    console.log('üß™ [testExtensionConnection] –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é...');
    const isInstalled = await checkExtensionInstalled();
    
    if (isInstalled) {
      toast({
        title: '‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ!',
        description: `ID: ${(window as any).ebusterExtensionId}`,
        variant: 'success'
      });
    } else {
      toast({
        title: '‚ùå –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Ebuster –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤',
        variant: 'destructive'
      });
    }
  };

  // –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∫—Ä–∏–ø—Ç–∞
  const handleViewScript = (script: Script) => {
    setSelectedScript(script);
    setIsViewDialogOpen(true);
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ü–µ–Ω–∫–∏
  const handleRateScript = (script: Script) => {
    setSelectedScript(script);
    setIsRatingModalOpen(true);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ü–µ–Ω–∫–∏
  const handleRatingSubmit = async (rating: number, review: string) => {
    if (!selectedScript) return;

    try {
      const token = localStorage.getItem('jwt_token');
      const headers: Record<string, string> = {
        'Content-Type': 'application/json',
      };
      
      if (token) {
        headers['Authorization'] = `Bearer ${token}`;
      }

      const response = await fetch(`http://localhost:3001/api/scripts/public/${selectedScript.id}/rate`, {
        method: 'POST',
        headers,
        body: JSON.stringify({
          rating,
          review: review.trim() || null
        }),
      });

      if (response.ok) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
        loadScripts();
        console.log('–û—Ü–µ–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      } else {
        const errorData = await response.json();
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏:', errorData.error);
        throw new Error(errorData.error);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏:', error);
      throw error;
    }
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
  const filteredScripts = scripts.filter(script => {
    const matchesSearch = script.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         script.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         script.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
    const matchesCategory = !categoryFilter || categoryFilter === 'all' || script.category === categoryFilter;
    
    return matchesSearch && matchesCategory;
  });

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å
  const getCategoryColor = (category: string) => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    return 'bg-muted text-muted-foreground';
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
  const formatFileSize = (bytes: number) => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-lg">{t('header.dashboard.scripts.loading')}</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div>
        <h2 className="text-2xl font-bold">{t('header.dashboard.scripts.title')}</h2>
        <p className="text-muted-foreground">{t('header.dashboard.scripts.description')}</p>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <Card className="bg-card/50 backdrop-blur-sm border border-border/30">
        <CardContent className="p-4">
          <div className="flex flex-wrap gap-4">
            <div className="flex-1 min-w-64">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                <Input
                  placeholder={t('header.dashboard.scripts.searchPlaceholder')}
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10"
                />
              </div>
            </div>
            <Select value={categoryFilter} onValueChange={setCategoryFilter}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder={t('header.dashboard.scripts.allCategories')} />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">{t('header.dashboard.scripts.allCategories')}</SelectItem>
                <SelectItem value="ui">UI</SelectItem>
                <SelectItem value="privacy">Privacy</SelectItem>
                <SelectItem value="productivity">Productivity</SelectItem>
                <SelectItem value="general">General</SelectItem>
              </SelectContent>
            </Select>
            <Select value={sortBy} onValueChange={setSortBy}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="created_at">–ü–æ –¥–∞—Ç–µ</SelectItem>
                <SelectItem value="downloads_count">–ü–æ –∑–∞–≥—Ä—É–∑–∫–∞–º</SelectItem>
                <SelectItem value="rating">–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É</SelectItem>
                <SelectItem value="title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</SelectItem>
              </SelectContent>
            </Select>
            <Select value={sortOrder} onValueChange={setSortOrder}>
              <SelectTrigger className="w-32">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="desc">‚Üì –£–±—ã–≤–∞–Ω–∏–µ</SelectItem>
                <SelectItem value="asc">‚Üë –í–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </CardContent>
      </Card>

      {/* –°–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
        {filteredScripts.map((script) => (
          <Card key={script.id} className="bg-card/50 backdrop-blur-sm border border-border/30 hover:border-border/50 transition-all duration-200">
            <CardHeader className="pb-3">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-2">
                    <CardTitle className="text-lg line-clamp-1">{script.title}</CardTitle>
                    {script.is_featured && (
                      <Badge variant="secondary">
                        <Zap className="h-3 w-3 mr-1" />
                        Featured
                      </Badge>
                    )}
                    {script.is_premium && (
                      <Badge variant="outline">
                        <Crown className="h-3 w-3 mr-1" />
                        Premium
                      </Badge>
                    )}
                  </div>
                  <p className="text-sm text-muted-foreground line-clamp-2">
                    {script.description}
                  </p>
                </div>
              </div>
            </CardHeader>
            <CardContent className="pt-0">
              <div className="space-y-3">
                {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Ç–µ–≥–∏ */}
                <div className="flex gap-2">
                  <Badge className={getCategoryColor(script.category)}>
                    {script.category}
                  </Badge>
                  {script.tags.slice(0, 2).map((tag, index) => (
                    <Badge key={index} variant="outline" className="text-xs">
                      <Tag className="h-3 w-3 mr-1" />
                      {tag}
                    </Badge>
                  ))}
                  {script.tags.length > 2 && (
                    <Badge variant="outline" className="text-xs">
                      +{script.tags.length - 2}
                    </Badge>
                  )}
                </div>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <div className="flex items-center justify-between text-sm text-muted-foreground">
                  <div className="flex items-center gap-4">
                    <span className="flex items-center gap-1">
                      <Download className="h-3 w-3" />
                      {script.downloads_count.toLocaleString()}
                    </span>
                    <div className="flex items-center gap-1">
                      <StarRating 
                        rating={script.rating} 
                        size="sm" 
                        showValue={true}
                        interactive={false}
                      />
                      <span className="text-xs text-muted-foreground">
                        ({script.rating_count})
                      </span>
                    </div>
                    <span className="flex items-center gap-1">
                      <FileText className="h-3 w-3" />
                      {formatFileSize(script.file_size)}
                    </span>
                  </div>
                </div>

                {/* –ê–≤—Ç–æ—Ä –∏ –¥–∞—Ç–∞ */}
                <div className="flex items-center justify-between text-xs text-muted-foreground">
                  <span className="flex items-center gap-1">
                    <User className="h-3 w-3" />
                    {script.author_name}
                  </span>
                  <span className="flex items-center gap-1">
                    <Calendar className="h-3 w-3" />
                    {new Date(script.published_at || script.created_at).toLocaleDateString()}
                  </span>
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <div className="flex gap-2 pt-2">
                  {/* –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–¥–∞ –¥–ª—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ */}
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => handleRateScript(script)}
                    className="flex-1"
                  >
                    <Star className="h-4 w-4 mr-2" />
                    –û—Ü–µ–Ω–∏—Ç—å
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => handleDownloadScript(script.id)}
                    className="flex-1"
                  >
                    <Download className="h-4 w-4 mr-2" />
                    {t('header.dashboard.scripts.install')}
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
      {filteredScripts.length === 0 && !loading && (
        <Card className="bg-card/50 backdrop-blur-sm border border-border/30">
          <CardContent className="p-8 text-center">
            <Code className="h-12 w-12 mx-auto mb-4 text-muted-foreground" />
            <h3 className="text-lg font-semibold mb-2">{t('header.dashboard.scripts.notFound')}</h3>
            <p className="text-muted-foreground">
              {t('header.dashboard.scripts.notFoundDescription')}
            </p>
          </CardContent>
        </Card>
      )}

      {/* –î–∏–∞–ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫—Ä–∏–ø—Ç–∞ */}
      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              {selectedScript?.title}
              {selectedScript?.is_featured && (
                <Badge variant="secondary">
                  <Zap className="h-3 w-3 mr-1" />
                  Featured
                </Badge>
              )}
              {selectedScript?.is_premium && (
                <Badge variant="outline">
                  <Crown className="h-3 w-3 mr-1" />
                  Premium
                </Badge>
              )}
            </DialogTitle>
          </DialogHeader>
          {selectedScript && (
            <div className="space-y-6">
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫—Ä–∏–ø—Ç–µ */}
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="text-sm font-medium">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                  <p className="text-sm text-muted-foreground mt-1">
                    {selectedScript.description}
                  </p>
                </div>
                <div>
                  <label className="text-sm font-medium">–ê–≤—Ç–æ—Ä</label>
                  <p className="text-sm text-muted-foreground mt-1">
                    {selectedScript.author_name}
                  </p>
                </div>
                <div>
                  <label className="text-sm font-medium">–í–µ—Ä—Å–∏—è</label>
                  <p className="text-sm text-muted-foreground mt-1">
                    {selectedScript.version}
                  </p>
                </div>
                <div>
                  <label className="text-sm font-medium">–†–∞–∑–º–µ—Ä</label>
                  <p className="text-sm text-muted-foreground mt-1">
                    {formatFileSize(selectedScript.file_size)}
                  </p>
                </div>
              </div>

              {/* –¢–µ–≥–∏ */}
              {selectedScript.tags.length > 0 && (
                <div>
                  <label className="text-sm font-medium">–¢–µ–≥–∏</label>
                  <div className="flex flex-wrap gap-2 mt-1">
                    {selectedScript.tags.map((tag, index) => (
                      <Badge key={index} variant="outline">
                        <Tag className="h-3 w-3 mr-1" />
                        {tag}
                      </Badge>
                    ))}
                  </div>
                </div>
              )}

              {/* –ö–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞ */}
              <div>
                <label className="text-sm font-medium">–ö–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞</label>
                <pre className="bg-muted p-4 rounded-md text-sm overflow-x-auto mt-1 max-h-96">
                  {selectedScript.code}
                </pre>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
              <div className="flex justify-end">
                <Button onClick={() => handleDownloadScript(selectedScript.id)}>
                  <Download className="h-4 w-4 mr-2" />
                  {t('header.dashboard.scripts.downloadScript')}
                </Button>
              </div>
            </div>
          )}
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ü–µ–Ω–∫–∏ */}
      <RatingModal
        isOpen={isRatingModalOpen}
        onClose={() => setIsRatingModalOpen(false)}
        scriptId={selectedScript?.id || ''}
        scriptTitle={selectedScript?.title || ''}
        onRatingSubmit={handleRatingSubmit}
      />
    </div>
  );
};

export default ScriptsList;
